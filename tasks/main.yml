---
# tasks file for grafana

# Install grafana via apt - Debian
- name: install gpg for grafana - apt
  apt:
    name: gnupg,software-properties-common
    state: present
    update_cache: yes
    cache_valid_time: 3600
  when: ansible_os_family == "Debian"

- name: add gpg key for grafana - apt
  apt_key:
    url: "https://packages.grafana.com/gpg.key"
    validate_certs: no
  when: ansible_os_family == "Debian"

- name: add repository for grafana - apt
  apt_repository:
    repo: "deb https://packages.grafana.com/oss/deb stable main"             
    state: present
    validate_certs: no
  when: ansible_os_family == "Debian"

- name: install grafana - apt
  apt:
    name: grafana
    state: latest
    update_cache: yes
    cache_valid_time: 3600
  when: ansible_os_family == "Debian"


# Install grafana via YUM - RedHat/CentOS

- name: create grafana repo file for - yum
  template:
    src: grafana.repo.j2
    dest: /etc/yum.repos.d/grafana.repo
    mode: 0755
  when: ansible_os_family == "RedHat"
  
- name: Install Grafana - yum
  yum:
    name: grafana
    state: present
  when: ansible_os_family == "RedHat"

- name: Install fontconfig - yum
  yum:
    name: fontconfig
    state: present
  when: ansible_os_family == "RedHat"

- name: Install freetype* - yum
  yum:
    name: freetype*
    state: present
  when: ansible_os_family == "RedHat"

- name: Install urw-fonts - yum
  yum:
    name: urw-fonts
    state: present
  when: ansible_os_family == "RedHat" 


# Start Service

- name: start service grafana-server
  systemd:
    name: grafana-server
    state: started
    enabled: yes


# Set Grafana Configuration Admin Pswd, Data Source, Dashboard

- name: wait for service up
  uri:
    url: "http://127.0.0.1:{{ grafana_listen_port }}"
    status_code: 200
  register: __result
  until: __result.status == 200
  retries: 120
  delay: 1

- name: change admin password for grafana gui
  shell : "grafana-cli admin reset-admin-password {{ grafana_admin_password }}"
  register: __command_admin
  changed_when: __command_admin.rc !=0

- name: set grafana datasource
  grafana_datasource:
    name: "{{ grafana_datasource_name }}"
    grafana_url: "http://127.0.0.1:{{ grafana_listen_port }}"
    grafana_password: "{{ grafana_admin_password }}"
    ds_type: prometheus
    url: "http://127.0.0.1:9090"
    state: present

- name: download grafana dashboard 
  get_url:
    url: https://grafana.com/api/dashboards/{{ grafana_dash_id }}/revisions/{{ grafana_dash_rev }}/download
    dest: "/etc/grafana/dashboard_{{ grafana_dash_id }}_rev_{{ grafana_dash_rev }}.json"
    mode: 0644

- name: Set the correct data source name in the dashboard
  replace:
    dest: "/etc/grafana/dashboard_{{ grafana_dash_id }}_rev_{{ grafana_dash_rev }}.json"
    regexp: '"(?:\${)?DS_[A-Z0-9_-]+(?:})?"'
    replace: '"{{ grafana_datasource_name }}"'

- name: Set the dashboard as the default in grafana config file and restart grafana
  replace:
    dest: "/etc/grafana/grafana.ini"
    regexp: '(;default_home_dashboard_path =)'
    replace: 'default_home_dashboard_path = /etc/grafana/dashboard_{{ grafana_dash_id }}_rev_{{ grafana_dash_rev }}.json'
  notify: restart_grafana

- name: Set the listen port for the Admin Interface
  replace:
    dest: "/etc/grafana/grafana.ini"
    regexp: '[;]?(http_port = )(\d*)'
    replace: 'http_port = {{ grafana_listen_port }}'
  notify: restart_grafana